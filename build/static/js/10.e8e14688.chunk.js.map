{"version":3,"sources":["components/Login/login.module.css","components/Login/Login.js"],"names":["module","exports","mapDispatchToProps","onLogin","loginUser","connect","state","error","getErrorMessage","useState","email","setEmail","password","setPassword","handleChange","event","target","name","value","console","log","className","styles","container","wrapper","form","onSubmit","preventDefault","Group","controlId","Label","label","Control","type","onChange","placeholder","autoComplete","required","variant","block","btn","signUp","registration","to"],"mappings":"wFACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,QAAU,uBAAuB,KAAO,oBAAoB,MAAQ,qBAAqB,MAAQ,qBAAqB,IAAM,mBAAmB,aAAe,4BAA4B,OAAS,wB,sICuF1P,IAIMC,EAAqB,CACzBC,QAASC,KAGIC,uBARS,SAACC,GAAD,MAAY,CAClCC,MAAOC,YAAgBF,MAOeJ,EAAzBG,EAvFf,YAA6B,IAAZF,EAAW,EAAXA,QACf,EAA0BM,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAOMC,EAAe,SAACC,GACpB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACd,OAAQD,GACN,IAAK,QACHN,EAASO,GACT,MACF,IAAK,WACHL,EAAYK,GACZ,MAEF,QACE,OAAOC,QAAQC,IAAI,0BAezB,OACE,qBAAKC,UAAWC,IAAOC,UAAvB,SACE,qBAAKF,UAAWC,IAAOE,QAAvB,SACE,eAAC,IAAD,CAAMH,UAAWC,IAAOG,KAAMC,SAZf,SAACX,GAEpB,GADAA,EAAMY,iBACFjB,GAASE,EAGX,OAFAT,EAAQ,CAAEO,QAAOE,aAxBnBD,EAAS,SACTE,EAAY,KAgCR,UACE,eAAC,IAAKe,MAAN,CAAYC,UAAU,iBAAiBR,UAAWC,IAAOZ,MAAzD,UACE,cAAC,IAAKoB,MAAN,CAAYT,UAAWC,IAAOS,MAA9B,qBACA,cAAC,IAAKC,QAAN,CACEC,KAAK,OACLhB,KAAK,QACLC,MAAOR,EACPwB,SAAUpB,EACVqB,YAAY,mBACZC,aAAa,MACbC,UAAQ,OAIZ,cAAC,IAAKT,MAAN,CAAYC,UAAU,oBAAtB,SACE,cAAC,IAAKG,QAAN,CACEC,KAAK,WACLhB,KAAK,WACLC,MAAON,EACPsB,SAAUpB,EACVqB,YAAY,WACZE,UAAQ,EACRD,aAAa,UAIjB,cAAC,IAAD,CAAQE,QAAQ,SAASL,KAAK,SAASM,OAAK,EAAClB,UAAWC,IAAOkB,IAA/D,mBAGA,gCACE,sBAAMnB,UAAWC,IAAOmB,OAAxB,6BACA,cAAC,IAAD,CAASpB,UAAWC,IAAOoB,aAAcC,GAAG,WAA5C,SACE","file":"static/js/10.e8e14688.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"login_container__leaje\",\"wrapper\":\"login_wrapper__1C9Og\",\"form\":\"login_form__1XT1R\",\"email\":\"login_email__2CF_7\",\"label\":\"login_label__2WpME\",\"btn\":\"login_btn__3ENE0\",\"registration\":\"login_registration__3Ghbo\",\"signUp\":\"login_signUp__gfcjV\"};","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { NavLink } from 'react-router-dom'\nimport { loginUser } from \"../../redux/User/userOperation\";\nimport { getErrorMessage } from \"../../redux/User/userSelectors\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport styles from \"./login.module.css\";\n\nfunction Login({ onLogin }) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const reset = () => {\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    switch (name) {\n      case \"email\":\n        setEmail(value);\n        break;\n      case \"password\":\n        setPassword(value);\n        break;\n\n      default:\n        return console.log(\"No such type of data\");\n    }\n  };\n\n\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (email && password) {\n      onLogin({ email, password });\n      reset();\n      return;\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.wrapper}>\n        <Form className={styles.form} onSubmit={handleSubmit}>\n          <Form.Group controlId=\"formBasicEmail\" className={styles.email}>\n            <Form.Label className={styles.label}>Sign In</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"email\"\n              value={email}\n              onChange={handleChange}\n              placeholder=\"Enter your email\"\n              autoComplete=\"off\"\n              required\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Control\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={handleChange}\n              placeholder=\"Password\"\n              required\n              autoComplete=\"off\"\n            />\n          </Form.Group>\n\n          <Button variant=\"danger\" type=\"submit\" block className={styles.btn}>\n            Login\n          </Button>\n          <div>\n            <span className={styles.signUp}>New to Netflix?</span>\n            <NavLink className={styles.registration} to=\"/registr\">\n              <span> Sign up</span>\n            </NavLink></div>\n        </Form>\n\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  error: getErrorMessage(state),\n});\n\nconst mapDispatchToProps = {\n  onLogin: loginUser,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"],"sourceRoot":""}