{"version":3,"sources":["components/Registr/registr.module.css","components/Registr/Registr.jsx"],"names":["module","exports","mapDispatchToProps","onSubmit","registerUser","connect","useState","name","setName","email","setEmail","password","setPassword","handleChange","event","target","value","console","log","className","styles","container","wrapper","preventDefault","form","Group","controlId","Label","label","Control","type","onChange","placeholder","autoComplete","variant","block","btn","signUp","registration","to"],"mappings":"wFACAA,EAAOC,QAAU,CAAC,UAAY,2BAA2B,QAAU,yBAAyB,KAAO,sBAAsB,MAAQ,uBAAuB,MAAQ,uBAAuB,IAAM,qBAAqB,aAAe,8BAA8B,OAAS,0B,8HC+FxQ,IAAMC,EAAqB,CACzBC,SAAUC,KAGGC,sBAAQ,KAAMH,EAAdG,EA5Ff,YAAgC,IAAbF,EAAY,EAAZA,SACjB,EAAwBG,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAQMC,EAAe,SAACC,GACpB,MAAwBA,EAAMC,OAAtBR,EAAR,EAAQA,KAAMS,EAAd,EAAcA,MACd,OAAQT,GACN,IAAK,OACHC,EAAQQ,GACR,MACF,IAAK,QACHN,EAASM,GACT,MACF,IAAK,WACHJ,EAAYI,GACZ,MACF,QACEC,QAAQC,IAAI,0BAalB,OACE,qBAAKC,UAAWC,IAAOC,UAAvB,SACE,qBAAKF,UAAWC,IAAOE,QAAvB,SACE,eAAC,IAAD,CAAMnB,SAZS,SAACW,GAEpB,GADAA,EAAMS,iBACFhB,GAAQE,GAASE,EAGnB,OAFAR,EAAS,CAAEI,OAAME,QAAOE,aAzB1BH,EAAQ,IACRE,EAAS,SACTE,EAAY,KAgCsBO,UAAWC,IAAOI,KAAhD,UACE,eAAC,IAAKC,MAAN,CAAYC,UAAU,gBAAtB,UACE,cAAC,IAAKC,MAAN,CAAYR,UAAWC,IAAOQ,MAA9B,qBACA,cAAC,IAAKC,QAAN,CACEC,KAAK,OACLvB,KAAK,OACLS,MAAOT,EACPwB,SAAUlB,EACVmB,YAAY,kBACZC,aAAa,WAGjB,cAAC,IAAKR,MAAN,CAAYC,UAAU,iBAAtB,SACE,cAAC,IAAKG,QAAN,CACEC,KAAK,QACLvB,KAAK,QACLS,MAAOP,EACPsB,SAAUlB,EACVmB,YAAY,cACZC,aAAa,UAGjB,cAAC,IAAKR,MAAN,CAAYC,UAAU,oBAAtB,SACE,cAAC,IAAKG,QAAN,CACEC,KAAK,WACLvB,KAAK,WACLS,MAAOL,EACPoB,SAAUlB,EACVmB,YAAY,WACZC,aAAa,UAIjB,cAAC,IAAD,CAAQC,QAAQ,SAASJ,KAAK,SAASK,OAAK,EAAChB,UAAWC,IAAOgB,IAA/D,oBAGA,gCACE,sBAAMjB,UAAWC,IAAOiB,OAAxB,iCACA,cAAC,IAAD,CAASlB,UAAWC,IAAOkB,aAAcC,GAAG,SAA5C,SACE","file":"static/js/12.bed464dd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"registr_container__UweRn\",\"wrapper\":\"registr_wrapper__m_kb5\",\"form\":\"registr_form__1pdG-\",\"email\":\"registr_email__3XrRx\",\"label\":\"registr_label__rmPhL\",\"btn\":\"registr_btn__QXfvc\",\"registration\":\"registr_registration__2w-ol\",\"signUp\":\"registr_signUp__3P1sR\"};","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { NavLink } from 'react-router-dom'\nimport { registerUser } from '../../redux/User/userOperation'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport styles from './registr.module.css'\n\nfunction Registr({ onSubmit }) {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const reset = () => {\n    setName('')\n    setEmail('')\n    setPassword('')\n  }\n\n  const handleChange = (event) => {\n    const { name, value } = event.target\n    switch (name) {\n      case 'name':\n        setName(value)\n        break\n      case 'email':\n        setEmail(value)\n        break\n      case 'password':\n        setPassword(value)\n        break\n      default:\n        console.log('No such type of data')\n    }\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    if (name && email && password) {\n      onSubmit({ name, email, password })\n      reset()\n      return\n    }\n  }\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.wrapper}>\n        <Form onSubmit={handleSubmit} className={styles.form}>\n          <Form.Group controlId=\"formBasicName\">\n            <Form.Label className={styles.label}>Sign Up</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={handleChange}\n              placeholder=\"Enter your name\"\n              autoComplete=\"off\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Control\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={handleChange}\n              placeholder=\"Enter email\"\n              autoComplete=\"off\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Control\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={handleChange}\n              placeholder=\"Password\"\n              autoComplete=\"off\"\n            />\n          </Form.Group>\n\n          <Button variant=\"danger\" type=\"submit\" block className={styles.btn}>\n            Submit\n          </Button>\n          <div>\n            <span className={styles.signUp}>Not New to Netflix?</span>\n            <NavLink className={styles.registration} to=\"/login\">\n              <span> Log In</span>\n            </NavLink>\n          </div>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  onSubmit: registerUser,\n}\n\nexport default connect(null, mapDispatchToProps)(Registr)\n"],"sourceRoot":""}