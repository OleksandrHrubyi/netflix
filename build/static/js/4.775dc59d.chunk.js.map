{"version":3,"sources":["components/Main/main.module.css","components/PhonebookForm/phonebookForm.module.css","components/ContactList/contactList.module.css","redux/Contacts/contactsOperations.js","redux/Contacts/contactsSelectors.js","components/PhonebookForm/PhonebookForm.js","components/ContactList/ContactList.jsx","components/Filter/Filter.js","components/Main/Main.jsx"],"names":["module","exports","uuidv4","require","v4","defaultModules","set","PNotifyMobile","getAllContacts","state","contacts","items","getFilterState","filter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","el","name","includes","connect","sameContact","dispatch","onSubmit","value","user","id","number","addContactsRequest","uploadContacts","then","response","addContactsSucces","catch","error","addContactsError","alert","text","addContactsOperation","getContacts","getContactsRequest","getContactsSucces","getContactsError","useState","setName","setNumber","useEffect","handleChange","event","target","console","log","className","styles","container","Form","form","e","preventDefault","length","find","Group","controlId","Label","Control","type","maxLength","onChange","placeholder","autoComplete","Button","variant","block","arr","onDel","deleteContactRequest","removeContacts","deleteContactSucces","deleteContactError","deleteContactOperation","TransitionGroup","component","map","CSSTransition","timeout","classNames","item","callContainer","href","callIcon","Provider","size","color","iconPhone","phoneTitle","iconDelBox","onClick","filterContact","in","filterStyles","unmountOnExit","contactTitle","ContactList"],"mappings":"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","file":"static/js/4.775dc59d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactTitle\":\"main_contactTitle__1pzSv\",\"enter\":\"main_enter__3DH9G\",\"enterActive\":\"main_enterActive__6SOd4\",\"exit\":\"main_exit__2HktF\",\"exitActive\":\"main_exitActive__1MzoH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"phonebookForm_container__BTjM4\",\"enter\":\"phonebookForm_enter__3ETj-\",\"enterActive\":\"phonebookForm_enterActive__25BGR\",\"exit\":\"phonebookForm_exit__1iftJ\",\"exitActive\":\"phonebookForm_exitActive__2S6Wl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"contactList_name__3nM-v\",\"number\":\"contactList_number__PxfHE\",\"item\":\"contactList_item__1Zfmy\",\"enter\":\"contactList_enter__29KRA\",\"enterActive\":\"contactList_enterActive__3ZojL\",\"exit\":\"contactList_exit__2IyBh\",\"exitActive\":\"contactList_exitActive__3LBAP\",\"btn\":\"contactList_btn__277bu\",\"iconDelBox\":\"contactList_iconDelBox__3_nYp\",\"callIcon\":\"contactList_callIcon__126tM\",\"iconPhone\":\"contactList_iconPhone__xyPxT\",\"callContainer\":\"contactList_callContainer__3g7bq\",\"phoneTitle\":\"contactList_phoneTitle__3psT7\"};","import { uploadContacts, getContacts, removeContacts } from \"../../service\";\nimport { alert, defaultModules } from \"@pnotify/core\";\nimport \"@pnotify/core/dist/PNotify.css\";\nimport * as PNotifyMobile from \"@pnotify/mobile\";\nimport \"@pnotify/mobile/dist/PNotifyMobile.css\";\nimport \"@pnotify/core/dist/BrightTheme.css\";\n\nimport {\n  addContactsRequest,\n  addContactsSucces,\n  addContactsError,\n  getContactsRequest,\n  getContactsSucces,\n  getContactsError,\n  deleteContactRequest,\n  deleteContactSucces,\n  deleteContactError,\n} from \"./contactAction\";\n\nconst { v4: uuidv4 } = require(\"uuid\");\ndefaultModules.set(PNotifyMobile, {});\n\nexport const addContactsOperation = (value) => (dispatch) => {\n  const user = {\n    id: uuidv4(),\n    name: value.name,\n    number: value.number,\n  };\n\n  dispatch(addContactsRequest());\n  uploadContacts(user)\n    .then((response) => dispatch(addContactsSucces(response)))\n    .catch((error) => {\n      dispatch(addContactsError(error));\n      alert({\n        text: error,\n      });\n    });\n};\n\nexport const getContactsOperation = (_) => (dispatch) => {\n  dispatch(getContactsRequest());\n  getContacts()\n    .then((response) => dispatch(getContactsSucces(response)))\n    .catch((error) => {\n      dispatch(getContactsError(error));\n      alert({\n        text: error,\n      });\n    });\n};\n\nexport const deleteContactOperation = (id) => (dispatch) => {\n  dispatch(deleteContactRequest());\n  removeContacts(id)\n    .then(() => dispatch(deleteContactSucces(id)))\n    .catch((error) => dispatch(deleteContactError(error)));\n};\n","import { createSelector } from \"reselect\";\n\nexport const getAllContacts = (state) => state.contacts.items;\nexport const getFilterState = (state) => state.contacts.filter;\n\nexport const getVisibleContacts = createSelector(\n  [getAllContacts, getFilterState],\n  (items, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return items.filter((el) =>\n      el.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import React, { useState, useEffect } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport {\n  addContactsOperation,\n  getContactsOperation,\n} from \"../../redux/Contacts/contactsOperations\";\nimport { getAllContacts } from \"../../redux/Contacts/contactsSelectors\";\nimport styles from \"../PhonebookForm/phonebookForm.module.css\";\n\nimport { alert, defaultModules } from \"@pnotify/core\";\nimport \"@pnotify/core/dist/PNotify.css\";\nimport * as PNotifyMobile from \"@pnotify/mobile\";\nimport \"@pnotify/mobile/dist/PNotifyMobile.css\";\nimport \"@pnotify/core/dist/BrightTheme.css\";\n\ndefaultModules.set(PNotifyMobile, {});\n\nfunction PhonebookForm({ getContacts, onSubmit, sameContact }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  useEffect(() => {\n    getContacts();\n  }, [getContacts]);\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (name.length === 0) {\n      alert({\n        text: \"Please enter name\",\n      });\n      return;\n    }\n\n    if (number.length === 0) {\n      alert({\n        text: \"Please enter number\",\n      });\n      return;\n    }\n\n    const result = sameContact.find((el) => el.name === name);\n\n    if (result) {\n      alert({\n        text: \"This contact already exists\",\n      });\n      return;\n    }\n\n    onSubmit({ name, number });\n    return reset();\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        console.log(\"No such type of data\");\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      <Form className={styles.form} onSubmit={handleSubmit}>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Add your contact</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            maxLength=\"40\"\n            onChange={handleChange}\n            placeholder=\"Name\"\n            autoComplete=\"off\"\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Label>Enter number</Form.Label>\n          <Form.Control\n            type=\"number\"\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n            placeholder=\"Phone number 380\"\n            autoComplete=\"off\"\n          />\n        </Form.Group>\n        <Button type=\"submit\" variant=\"dark\" block>\n          Add contact\n        </Button>\n      </Form>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  sameContact: getAllContacts(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (value) => dispatch(addContactsOperation(value)),\n  getContacts: () => dispatch(getContactsOperation()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PhonebookForm);\n","import PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { IconContext } from \"react-icons\";\nimport styles from \"../ContactList/contactList.module.css\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport { deleteContactOperation } from \"../../redux/Contacts/contactsOperations\";\nimport { getVisibleContacts } from \"../../redux/Contacts/contactsSelectors\";\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\nimport { FiPhoneCall } from \"react-icons/fi\";\n\nfunction Card({ arr, onDel }) {\n  return (\n    <div className={styles.container}>\n      <TransitionGroup component=\"ul\">\n        {arr.map(({ id, name, number }) => {\n          return (\n            <CSSTransition key={id} timeout={3000} classNames={styles}>\n              <li className={styles.item}>\n                <div className={styles.callContainer}>\n                  <div>\n                    <a href=\"tel:{number}\" className={styles.callIcon}>\n                      <IconContext.Provider\n                        value={{\n                          size: \"1.5em\",\n                          color: \"rgb(104, 177, 132)\",\n                          className: styles.iconPhone,\n                        }}\n                      >\n                        <FiPhoneCall />\n                      </IconContext.Provider>\n                    </a>\n                  </div>\n                  <div>\n                    <h3 className={styles.name}>{name} </h3>\n                    <p className={styles.phoneTitle}>{number}</p>\n                  </div>\n                </div>\n                <div className={styles.iconDelBox}>\n                  <IconContext.Provider value={{ size: \"1.3em\" }}>\n                    <button\n                      className=\"btn btn-outline-danger\"\n                      onClick={() => {\n                        onDel(id);\n                      }}\n                      type=\"button\"\n                    >\n                      <RiDeleteBin6Line />\n                    </button>\n                  </IconContext.Provider>\n                </div>\n              </li>\n            </CSSTransition>\n          );\n        })}\n      </TransitionGroup>\n    </div>\n  );\n}\n\nCard.propTypes = {\n  arr: PropTypes.array.isRequired,\n  onDel: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  arr: getVisibleContacts(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDel: (id) => dispatch(deleteContactOperation(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Card);\n","import PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Form from \"react-bootstrap/Form\";\n\nimport styles from \"../Filter/filter.module.css\";\nimport { filterContact } from \"../../redux/Contacts/contactAction\";\nimport { getFilterState } from \"../../redux/Contacts/contactsSelectors\";\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <Form className={styles.form}>\n      <Form.Group controlId=\"formBasicFilter\">\n        <Form.Label>Find contacts by name</Form.Label>\n        <Form.Control\n          type=\"text\"\n          name=\"filter\"\n          value={value}\n          onChange={onChange}\n          placeholder=\"Enter name\"\n        />\n      </Form.Group>\n    </Form>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nconst mapStateToProps = (state) => ({\n  value: getFilterState(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (event) => dispatch(filterContact(event.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import PropTypes from \"prop-types\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\nimport PhonebookForm from \"../PhonebookForm/PhonebookForm\";\nimport ContactList from \"../ContactList/ContactList\";\nimport Filter from \"../Filter/Filter\";\nimport filterStyles from \"./main.module.css\";\nimport { getAllContacts } from \"../../redux/Contacts/contactsSelectors\";\nimport styles from \"./main.module.css\";\n\nfunction Main({ contacts }) {\n  return (\n    <>\n      <PhonebookForm />\n      <CSSTransition\n        in={contacts.length > 0}\n        classNames={filterStyles}\n        timeout={250}\n        unmountOnExit\n      >\n        <div>\n          {\" \"}\n          <p className={styles.contactTitle}>Contacts</p>\n          <Filter />\n        </div>\n      </CSSTransition>\n      <ContactList />\n    </>\n  );\n}\n\nMain.propTypes = {\n  contacts: PropTypes.array,\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: getAllContacts(state),\n});\n\nexport default connect(mapStateToProps, null)(Main);\n"],"sourceRoot":""}