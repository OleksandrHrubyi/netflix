{"version":3,"sources":["components/Registr/Registr.jsx"],"names":["mapDispatchToProps","onSubmit","registerUser","connect","useState","name","setName","email","setEmail","password","setPassword","handleChange","event","target","value","console","log","preventDefault","Group","controlId","Label","Control","type","onChange","placeholder","autoComplete","Text","className","variant","block"],"mappings":"oNA0FA,IAAMA,EAAqB,CACzBC,SAAUC,KAGGC,sBAAQ,KAAMH,EAAdG,EAvFf,YAAgC,IAAbF,EAAY,EAAZA,SAAY,EACLG,mBAAS,IADJ,mBACtBC,EADsB,KAChBC,EADgB,OAEHF,mBAAS,IAFN,mBAEtBG,EAFsB,KAEfC,EAFe,OAGGJ,mBAAS,IAHZ,mBAGtBK,EAHsB,KAGZC,EAHY,KAWvBC,EAAe,SAACC,GAAW,IAAD,EACNA,EAAMC,OAAtBR,EADsB,EACtBA,KAAMS,EADgB,EAChBA,MACd,OAAQT,GACN,IAAK,OACHC,EAAQQ,GACR,MACF,IAAK,QACHN,EAASM,GACT,MACF,IAAK,WACHJ,EAAYI,GACZ,MACF,QACEC,QAAQC,IAAI,0BAalB,OACE,eAAC,IAAD,CAAMf,SAVa,SAACW,GAEpB,GADAA,EAAMK,iBACFZ,GAAQE,GAASE,EAGnB,OAFAR,EAAS,CAAEI,OAAME,QAAOE,aAzB1BH,EAAQ,IACRE,EAAS,SACTE,EAAY,KA8BZ,UACE,eAAC,IAAKQ,MAAN,CAAYC,UAAU,gBAAtB,UACE,cAAC,IAAKC,MAAN,mBACA,cAAC,IAAKC,QAAN,CACEC,KAAK,OACLjB,KAAK,OACLS,MAAOT,EACPkB,SAAUZ,EACVa,YAAY,kBACZC,aAAa,WAGjB,eAAC,IAAKP,MAAN,CAAYC,UAAU,iBAAtB,UACE,cAAC,IAAKC,MAAN,4BACA,cAAC,IAAKC,QAAN,CACEC,KAAK,QACLjB,KAAK,QACLS,MAAOP,EACPgB,SAAUZ,EACVa,YAAY,cACZC,aAAa,QAEf,cAAC,IAAKC,KAAN,CAAWC,UAAU,aAArB,+DAIF,eAAC,IAAKT,MAAN,CAAYC,UAAU,oBAAtB,UACE,cAAC,IAAKC,MAAN,uBACA,cAAC,IAAKC,QAAN,CACEC,KAAK,WACLjB,KAAK,WACLS,MAAOL,EACPc,SAAUZ,EACVa,YAAY,WACZC,aAAa,WAIjB,cAAC,IAAD,CAAQG,QAAQ,OAAON,KAAK,SAASO,OAAK,EAA1C","file":"static/js/8.d84baa19.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { registerUser } from \"../../redux/User/userOperation\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nfunction Registr({ onSubmit }) {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const reset = () => {\n    setName(\"\");\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"email\":\n        setEmail(value);\n        break;\n      case \"password\":\n        setPassword(value);\n        break;\n      default:\n        console.log(\"No such type of data\");\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (name && email && password) {\n      onSubmit({ name, email, password });\n      reset();\n      return;\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Group controlId=\"formBasicName\">\n        <Form.Label>Name</Form.Label>\n        <Form.Control\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          placeholder=\"Enter your name\"\n          autoComplete=\"off\"\n        />\n      </Form.Group>\n      <Form.Group controlId=\"formBasicEmail\">\n        <Form.Label>Email address</Form.Label>\n        <Form.Control\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={handleChange}\n          placeholder=\"Enter email\"\n          autoComplete=\"off\"\n        />\n        <Form.Text className=\"text-muted\">\n          We'll never share your email with anyone else.\n        </Form.Text>\n      </Form.Group>\n      <Form.Group controlId=\"formBasicPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={handleChange}\n          placeholder=\"Password\"\n          autoComplete=\"off\"\n        />\n      </Form.Group>\n\n      <Button variant=\"dark\" type=\"submit\" block>\n        Submit\n      </Button>\n    </Form>\n  );\n}\n\nconst mapDispatchToProps = {\n  onSubmit: registerUser,\n};\n\nexport default connect(null, mapDispatchToProps)(Registr);\n"],"sourceRoot":""}